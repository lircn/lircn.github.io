<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>有趣题目分享</title>
    <link href="undefined2019/11/22/%E6%9C%89%E8%B6%A3%E9%A2%98%E7%9B%AE%E5%88%86%E4%BA%AB/"/>
    <url>2019/11/22/%E6%9C%89%E8%B6%A3%E9%A2%98%E7%9B%AE%E5%88%86%E4%BA%AB/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><code>LeetCode</code>有道题，<br><em>接雨水</em>：给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。</p><p><img src="https://i.loli.net/2019/11/22/iv2QJgIsRGeXcHV.png" srcset="undefined" alt="rainwatertrap.png"></p><p>上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><strong>输入</strong>: [0,1,0,2,1,0,1,3,2,1,2,1]<br><strong>输出</strong>: 6</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>一眼看去，可能马上想到的办法就是找到所有“坑”，再依次计算每个“坑”的容量并累加。<br>不过考虑到左右边界、木桶短板溢出、坑底的不规则等问题，这种计算方法设计起来想想就麻烦。。。</p><p>于是想到一种方法，依次计算x轴上每个点的容量，计算时就不用不考虑侧面关联性（坑的形状），逐个累加即可。<br>总之是计算耗时多，但思路超简单！</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><code>C++</code></p><pre><code class="c++">#include &lt;vector&gt;using namespace std;class Solution {public:    int trap(vector&lt;int&gt;&amp; height) {        if (height.size() &lt; 3) { return 0; }        int all = 0;        for (int i = 1; i &lt; height.size() - 1; i++) {            int vol = volume(height, i);            if (vol &gt; 0) { all += vol; }        }        return all;    }    // 计算单个点的容量    int volume(vector&lt;int&gt;&amp; height, int idx) {        int l = 0; // 桶左侧        for (int i = idx - 1; i &gt;= 0; i--) {            if (l &lt; height[i]) { l = height[i]; }        }        int r = 0; // 桶右侧        for (int i = idx + 1; i &lt; height.size(); i++) {            if (r &lt; height[i]) { r = height[i]; }        }        int min = (l&lt;r)?l:r; // 桶的短板        return min - height[idx];    }};</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>再次开始</title>
    <link href="undefined2019/11/22/%E5%86%8D%E6%AC%A1%E5%BC%80%E5%A7%8B/"/>
    <url>2019/11/22/%E5%86%8D%E6%AC%A1%E5%BC%80%E5%A7%8B/</url>
    
    <content type="html"><![CDATA[<p>上次建站是在5年前，心血来潮地搞了个基本没有blog的<strong>Blog</strong>，摸索中把前后端（<code>Bootstrap</code> + <code>Nginx</code> + <code>Tornado</code>）撸了一遍，顺便买买CVM，域名和带宽，<del>好给前东家贡献一点软妹币，</del> 提前体验到全栈的残酷。<br><em>充钱你就会变强.jpg</em></p><p>如今回顾，角落的站点许久未更新，表面的设计和背后的代码都诉说着当年的<del>Trash</del>稚嫩。<br>是时候重构了，趁着再次心血来潮的冲动，往前多走几步。</p><p>清空所有旧资源和代码，全新的前后端，from here，from now。</p><blockquote><p>来自远方，<br>来自黄昏和清晨，<br>来自十二重高天的好风轻扬，<br>飘来生命气息的吹拂：<br>吹在我身上。<br>快，趁生命气息逗留，<br>盘桓未去，<br>拉住我的手，<br>快告诉我你的心声。</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>